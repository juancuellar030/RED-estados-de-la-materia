/* === ESTILOS BASE Y MAQUETACIÓN GLOBAL (VERSIÓN FINAL) === */
body {
    background-color: #000000;
    color: #e0e0e0;
    font-family: 'Rajdhani', sans-serif;
    margin: 0;
    min-height: 100vh;
    cursor: url('assets/cursor-default.svg'), auto;
    overflow: hidden; /* Evita barras de scroll innecesarias */

    /* LA CLAVE: Flexbox para centrar el contenido principal en TODAS las páginas */
    display: flex;
    justify-content: center;
    align-items: center;
    
    /* El padding se elimina para que la tablet pueda ocupar el 100% del alto/ancho */
    padding: 0; 
    box-sizing: border-box;
}

/* Títulos principales con fuente Sci-Fi */
.main-title, .page-title {
    font-family: 'Orbitron', sans-serif;
    color: #ffffff; /* Cian neón */
    font-size: 2.5rem;
    text-shadow: 0 0 10px #00f6ff, 0 0 20px #00f6ff; /* Efecto de brillo */
}

.subtitle {
    font-size: 1.2rem;
    color: #ffffff; /* Magenta neón */
    text-shadow: 0 0 8px #ff00ff;
}

/* Estilo para la lista del equipo */
.team-list {
    list-style: none;
    padding: 0;
    font-size: 1.2rem;
}

/* Botón de llamada a la acción */
.cta-button {
    display: inline-block;
    margin-top: 30px;
    padding: 15px 30px;
    border: 2px solid #00f6ff;
    border-radius: 5px;
    color: #00f6ff;
    font-family: 'Orbitron', sans-serif;
    text-decoration: none;
    font-size: 1.2rem;
    background-color: transparent;
    transition: all 0.3s ease;
}

.cta-button:hover {
    background-color: #00f6ff;
    color: #0a0f2b;
    box-shadow: 0 0 20px #00f6ff;
}

/* Estilos para las tarjetas del árbol de problemas */
.problem-section {
    margin-top: 40px;
    text-align: left;
}

.problem-section h2 {
    font-family: 'Orbitron', sans-serif;
    color: #ff00ff;
    border-bottom: 2px solid #ff00ff;
    padding-bottom: 5px;
}

.problem-card {
    background-color: rgba(10, 30, 60, 0.5); /* Fondo semitransparente */
    border: 1px solid #00f6ff;
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 5px;
}

.problem-card h3 {
    margin-top: 0;
    color: #e0e0e0;
}

/* === FUTURISTIC SCREEN STYLES === */
.screen-container {
    /* Ya no dibuja un fondo. Ahora es solo un contenedor de maquetación. */
    
    /* Mantenemos el tamaño y el padding para que el texto se alinee correctamente */
    width: 80vw;
    max-width: 900px;
    min-height: 500px;
    padding: 60px 80px;
    box-sizing: border-box;

    /* Y las propiedades de Flexbox para centrar el contenido */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
}

/* We still need this for the other pages */
.content-container {
    text-align: center;
    max-width: 800px;
}

/* === MODAL / HOLOGRAM PANEL STYLES === */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(10, 15, 43, 0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.4s, visibility 0.4s;
}

.modal-overlay.visible {
    opacity: 1;
    visibility: visible;
}

.modal-content {
    background-color: #0a0f2b;
    border: 2px solid #ff00ff;
    box-shadow: 0 0 20px #ff00ff;
    padding: 30px;
    border-radius: 10px;
    max-width: 600px;
    width: 90%;
    text-align: left;
}

.modal-content h2 {
    font-family: 'Orbitron', sans-serif;
    color: #ff00ff;
    border-bottom: 1px solid #ff00ff;
    padding-bottom: 10px;
}

#close-modal {
    margin-top: 20px;
}

/* === ANIMATIONS === */
@keyframes pulse {
    0% { transform: scale(0.95); box-shadow: 0 0 15px #ff00ff, 0 0 30px #ff00ff; }
    70% { transform: scale(1); box-shadow: 0 0 25px #ff00ff, 0 0 50px #ff00ff; }
    100% { transform: scale(0.95); box-shadow: 0 0 15px #ff00ff, 0 0 30px #ff00ff; }
}

/* === MATRIX RAIN BACKGROUND STYLES === */
#matrix-canvas {
    background-color: #000000; 
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

/* Cursor de puntero (la mano) para elementos interactivos */
a, button, .node {
    cursor: url('assets/cursor-pointer.svg'), pointer;
}

/* === ANIMACIÓN DE LA PANTALLA DE BIENVENIDA (ESTRUCTURA CORREGIDA) === */

/* --- 1. Contenedor de la escena (el nuevo padre) --- */
.welcome-scene-container {
    /* La regla más importante: establece el contexto de posicionamiento */
    position: relative;
    /* Usamos flexbox para alinear los ítems, pero no es estrictamente necesario */
    display: flex;
    justify-content: center;
    align-items: center;
}

/* --- 2. Estilos para los elementos animados --- */

/* Estilo para la consola proyectora */
#console-projector {
    position: absolute;
    /* Usamos valores negativos para colocarlo FUERA del borde de la pantalla */
    top: -60px;
    left: -140px;
    width: 200px;
    z-index: 20;
    opacity: 0;

    animation: slideInFromLeft 1.5s cubic-bezier(0.25, 1, 0.5, 1) forwards;
}

/* Estilo para la imagen dentro del contenedor de la consola */
#console-projector img {
    width: 100%;
    height: auto;
    display: block;
}

/* Estilo para la pantalla de bienvenida (Ahora es un contenedor) */
#welcome-screen {
    /* Lo hacemos un contenedor relativo para su pseudo-elemento */
    position: relative; 
    /* Lo hacemos transparente, el pseudo-elemento tendrá el fondo */
    background-color: transparent; 
    /* Importante para que la animación de barrido no se desborde */
    overflow: hidden; 
}

/* El panel de barrido que contiene la imagen de la pantalla */
#welcome-screen::before {
    content: '';
    position: absolute;
    top: 0; left: 0;
    width: 100%;
    height: 100%;

    background-image: url('assets/futuristic-screen.svg');
    background-size: 100% 100%;
    background-repeat: no-repeat;
    background-position: center;

    transform-origin: left;
    opacity: 0;
    animation: 
        wipe-from-left 1s ease-out 1.2s forwards,
        fadeInContent 1s ease-out 1.2s forwards;
    
    /* ¡LA SOLUCIÓN! Empuja esta capa al fondo */
    z-index: -1; 
}

/* --- 3. Animaciones (sin cambios) --- */

@keyframes slideInFromLeft {
    from { transform: translateX(-100%); opacity: 0; }
    to   { transform: translateX(0); opacity: 1; }
}

@keyframes projectScreen {
    from { transform: scale(0.5); opacity: 0; }
    to   { transform: scale(1); opacity: 1; }
}

/* --- 4. Animación de la llamarada (sin cambios, seguirá funcionando) --- */
@keyframes lens-flare-effect {
    0%   { opacity: 0; transform: translate(-50%, -50%) scale(0); }
    50%  { opacity: 1; transform: translate(-50%, -50%) scale(1.2); }
    100% { opacity: 0; transform: translate(-50%, -50%) scale(0.5); }
}

@keyframes pulsating-flare {
    0%   { opacity: 0.3; transform: translate(-50%, -50%) scale(0.5); }
    50%  { opacity: 0.9; transform: translate(-50%, -50%) scale(1); }
    100% { opacity: 0.3; transform: translate(-50%, -50%) scale(0.5); }
}

/* Nueva animación para el barrido de la pantalla de inicio */
@keyframes wipe-from-left {
    from { transform: scaleX(0); }
    to   { transform: scaleX(1); }
}

#console-projector::after {
    content: '';
    display: block;
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background: radial-gradient(circle, rgba(175, 250, 255, 0.9) 0%, rgba(0, 246, 255, 0.7) 40%, rgba(0, 246, 255, 0) 70%);
    position: absolute;
    top: 50%;
    left: 75%;
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
    
    animation:
        lens-flare-effect 1s ease-in-out 1.2s forwards,
        pulsating-flare 2.5s ease-in-out 2.2s infinite;
}

/* === ESTILOS PARA LA ANIMACIÓN DE MÁQUINA DE ESCRIBIR === */

/* 1. Oculta el texto inicialmente */
#welcome-screen .typewriter-text {
    visibility: hidden;
}

/* 2. Estilo para el cursor parpadeante */
.typing::after {
    content: '_'; /* Puedes usar '_' o '|' */
    font-weight: bold;
    display: inline-block;
    vertical-align: bottom;
    animation: blink 0.7s infinite;
    margin-left: 3px;
}

/* 3. Animación de parpadeo */
@keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
}

/* ========================================================================== */
/* ESTILOS PARA LA PÁGINA DE RA CON CUBO 3D INTERACTIVO */
/* ========================================================================== */

/* --- 1. Definición de la Animación de Giro --- */
@keyframes spin {
    from { transform: rotateY(0deg) rotateX(10deg); }
    to   { transform: rotateY(360deg) rotateX(10deg); }
}

/* --- 2. Contenedores y Escena --- */
.ar-interface-container {
    width: 90%;
    max-width: 1100px;
    text-align: center; /* Mantenemos esto para los títulos */
}

.cube-scene {
    width: 200px;
    height: 200px;
    perspective: 1000px;
    /* SOLUCIÓN: Aumentamos el margen superior para bajar todo el bloque */
    margin: 50px auto 0 auto; 
}

.cube {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    
    /* Mantenemos la rotación inicial, pero la aplicamos directamente */
    transform: rotateX(10deg); 
    
    /* La animación solo se aplicará por defecto */
    animation: spin 25s infinite linear;
    
    /* LA CLAVE: Una transición suave para cuando el usuario suelta el cubo */
    transition: transform 0.3s ease-out;
}

/* NUEVA REGLA: Desactiva la animación cuando el cubo es interactivo */
.cube.is-interactive {
    animation: none; /* ¡Detiene la rotación automática! */
}

/* --- 3. Caras del Cubo (CON COLORES INVERTIDOS) --- */
.cube-face {
    position: absolute;
    width: 200px;
    height: 200px;
    
    /* FONDO: Un cian más sólido y brillante */
    background-color: rgba(0, 246, 255, 0.7); /* Aumentamos la opacidad de 0.2 a 0.7 */
    
    /* BRILLO: Añadimos un box-shadow para un efecto de neón */
    box-shadow: 0 0 15px rgba(0, 246, 255, 0.5);
    
    border: 1px solid #ffffff; /* Borde blanco para mayor definición */
    
    /* TEXTO: Negro para un contraste máximo */
    color: #000000;
    text-shadow: none; /* Quitamos cualquier sombra que pudiera tener */
    
    font-family: 'Orbitron', sans-serif;
    font-size: 1.2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: all 0.3s ease;
}

.cube-face:hover {
    /* Al pasar el ratón, la cara se vuelve aún más brillante */
    background-color: rgba(0, 246, 255, 0.9);
    box-shadow: 0 0 25px rgba(0, 246, 255, 0.8), 0 0 10px #ffffff; /* Añadimos un brillo interior blanco */
    border-color: #ffffff;
}

/* Posicionamiento 3D de cada cara */
.front  { transform: rotateY(0deg) translateZ(100px); }
.back   { transform: rotateY(180deg) translateZ(100px); }
.right  { transform: rotateY(90deg) translateZ(100px); }
.left   { transform: rotateY(-90deg) translateZ(100px); }
.top    { transform: rotateX(90deg) translateZ(100px); }
.bottom { transform: rotateX(-90deg) translateZ(100px); }

/* --- 4. Panel de Mensajes --- */
.message-panel {
    width: 80%;
    max-width: 700px;
    min-height: 100px;
    /* SOLUCIÓN AL CENTRADO: 'margin: auto' también aquí */
    margin: 0 auto; 
    background-color: rgba(10, 30, 60, 0.7);
    border: 1px solid #ff00ff;
    padding: 20px;
    box-sizing: border-box;
    opacity: 0;
    transform: scale(0.95);
    transition: all 0.4s ease-out;
}
.message-panel.visible {
    opacity: 1;
    transform: scale(1);
}
#message-title {
    margin-top: 0;
    font-family: 'Orbitron', sans-serif;
    color: #ff00ff;
}

/* ========================================================================== */
/* ESTILOS Y ANIMACIÓN PARA LA TABLET SCI-FI (RECONSTRUCCIÓN FLEXBOX FINAL) */
/* ========================================================================== */

/* --- 1. Definiciones de Animación (sin cambios) --- */
@keyframes slideInFromBottom {
    from { transform: translateY(50px); opacity: 0; }
    to   { transform: translateY(0); opacity: 1; }
}
@keyframes wipe-in-from-edge {
    from { transform: scaleX(0); }
    to   { transform: scaleX(1); }
}
@keyframes fadeInContent {
    from { opacity: 0; }
    to   { opacity: 1; }
}
/* Animación para el núcleo y los hexágonos */
@keyframes pop-in {
    from {
        opacity: 0;
        transform: scale(0.5);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}
/* Animación de parpadeo para el cursor de la máquina de escribir */
@keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
}

/* --- 2. El Contenedor Principal (Flexbox) --- */
.tablet-container {
    display: flex;
    align-items: center; /* Centra los hijos verticalmente */
    width: 90vw;
    height: 85vh;
    max-width: 1600px;
    opacity: 0;
    animation: fadeInContent 0.5s ease-out 0.2s forwards;
}

.tablet-frame-container {
    width: 120px;
    display: flex;
    align-items: center;
    opacity: 0;
    animation: slideInFromBottom 1s ease-out 0.5s forwards;
}

/* --- 4. Las Imágenes de los Marcos --- */
.tablet-frame {
    /* Hacemos que la imagen llene el contenedor al 100% */
    width: 100%; 
    height: 95%;
    /* Evita la distorsión si las proporciones no son perfectas */
    object-fit: fill; 
}

/* --- 5. La Pantalla (con scroll restaurado) --- */
.tablet-screen {
    position: relative; /* Necesario para posicionar los pseudo-elementos */
    flex-grow: 1;
    height: 100%;
    padding: 20px 40px;
    box-sizing: border-box;
    overflow-y: auto; /* Mantenemos el scroll por si acaso */
    
    /* Hacemos que la pantalla en sí sea solo un contenedor transparente */
    background-color: transparent;
    border: 1px solid rgba(0, 246, 255, 0.4); /* Mantenemos el borde exterior */
}

/* --- 4. Los "Paneles" de Barrido (Pseudo-elementos) --- */
.tablet-screen::before,
.tablet-screen::after {
    content: '';
    position: absolute;
    top: 0;
    width: 50.01%; /* Ligeramente más del 50% para que se superpongan en el centro */
    height: 100%;
    
    /* Le damos la apariencia de la pantalla a estos paneles */
    background-color: rgba(0, 246, 255, 0.15);
    box-shadow: inset 0 0 30px rgba(0, 246, 255, 0.5);

    /* Los hacemos empezar sin ancho */
    transform: scaleX(0);
    
    /* Aplicamos la animación de barrido con el retraso correcto */
    animation: wipe-in-from-edge 0.7s ease-out 1.2s forwards;
    
    z-index: -1; 
}

/* El panel izquierdo se anima desde la izquierda */
.tablet-screen::before {
    left: 0;
    transform-origin: left;
}
/* El panel derecho se anima desde la derecha */
.tablet-screen::after {
    right: 0;
    transform-origin: right;
}

/* --- 6. Contenido de la Pantalla (con ajustes de espacio) --- */
.tablet-screen .mind-map-container,
.tablet-screen .navigation-buttons {
    opacity: 0;
    animation: fadeInContent 0.5s ease-out 1.9s forwards;
}

/* A. Título con máquina de escribir */
.tablet-screen .page-title {
    visibility: hidden; /* Empieza oculto, el JS lo revelará */
}
.tablet-screen .page-title.typing::after {
    content: '_';
    display: inline-block;
    animation: blink 0.7s infinite;
    margin-left: 5px;
}

/* Núcleo y Nodos */
.core-problem, .node {
    opacity: 0;
    animation-fill-mode: forwards; /* Mantiene el estado final */
}

/* Animación del núcleo */
.core-problem {
    animation-name: pop-in, pulse;
    animation-duration: 0.5s, 2s;
    animation-timing-function: ease-out, ease-in-out;
    animation-delay: 3.5s, 4s; /* Aparece, y luego empieza a pulsar */
    animation-iteration-count: 1, infinite;
}

/* Animación de los nodos */
.node { animation-name: pop-in; animation-duration: 0.4s; }
.effects-branch .node:nth-child(1) { animation-delay: 4.0s; }
.effects-branch .node:nth-child(2) { animation-delay: 4.15s; }
.effects-branch .node:nth-child(3) { animation-delay: 4.3s; }
.effects-branch .node:nth-child(4) { animation-delay: 4.45s; }
.causes-branch .node:nth-child(1) { animation-delay: 4.6s; }
.causes-branch .node:nth-child(2) { animation-delay: 4.75s; }
.causes-branch .node:nth-child(3) { animation-delay: 4.9s; }
.causes-branch .node:nth-child(4) { animation-delay: 5.05s; }

/* Botones */
.tablet-screen .navigation-buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
    padding-bottom: 20px;
    opacity: 0;
    animation: fadeInContent 0.5s ease-out 5.5s forwards;
}

/* --- 7. Hexágono (CON TEXTO CORREGIDO) --- */
.node {
    width: 60px; height: 70px;
    background-color: rgba(0, 246, 255, 0.1);
    color: #ffffff;
    font-family: 'Orbitron', sans-serif;
    font-size: 1.3rem;
    display: flex;
    justify-content: center;
    align-items: center;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    cursor: pointer;
    transform: scale(1);
    transition: all 0.3s ease;
    padding-top: 5px; 
    box-sizing: border-box;
    filter: drop-shadow(0 0 4px #00f6ff);
    text-shadow: 0 0 3px #ffffff;
}
.node:hover {
    background-color: rgba(0, 246, 255, 0.3);
    transform: scale(1.2);
    filter: drop-shadow(0 0 12px #00f6ff);
}

/* --- 8. Mind map (Sin cambios, pero incluido) --- */
.mind-map-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 40px;
    /* SOLUCIÓN AL ESPACIO SUPERIOR: Eliminamos el margen superior */
    margin: 0 0 50px 0; 
    width: 100%;
    position: relative;
}
.core-problem {
    /* Estilos de apariencia */
    width: 120px;
    height: 120px;
    background-color: #ff00ff;
    color: #fff;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    font-family: 'Orbitron', sans-serif;
    box-shadow: 0 0 15px #ff00ff, 0 0 30px #ff00ff;
    z-index: 10;
    
    /* Estado inicial para la animación */
    opacity: 0; 
    
    /* ¡LA MAGIA! Encadenamos ambas animaciones */
    animation: 
        /* Animación 1: Aparece */
        pop-in 0.5s ease-out 3.5s forwards,
        
        /* Animación 2: Pulsa para siempre, empezando cuando la primera termina */
        pulse 2s ease-in-out 4s infinite;
}
.causes-branch, .effects-branch {
    display: flex;
    justify-content: space-around;
    width: 100%;
}

/* --- 8. Barra de Scroll --- */
.tablet-screen {
    scrollbar-width: thin;
    scrollbar-color: #00f6ff #0a0f2b;
}

/* ========================================================================== */
/* ESTILOS PARA EL BRILLO PULSANTE DE LOS MARCOS DE LA TABLET */
/* ========================================================================== */

/* --- 1. Definición de la animación de pulso --- */
@keyframes glow-pulse {
    0% { opacity: 0.4; box-shadow: 0 0 20px #00f6ff; }
    50% { opacity: 1; box-shadow: 0 0 50px #00f6ff, 0 0 70px #00f6ff; }
    100% { opacity: 0.4; box-shadow: 0 0 20px #00f6ff; }
}

/* --- 2. Preparar el contenedor del marco --- */
.tablet-frame-container {
    /* Necesita ser relativo para que el brillo se posicione dentro de él */
    position: relative;
}

/* --- 3. Crear y estilizar la barra de brillo --- */
.tablet-frame-container::before {
    content: '';
    display: block;
    position: absolute;
    top: 56.5%;
    transform: translateY(-60%); /* Centra la barra verticalmente */

    /* Apariencia de la barra de luz */
    height: 82%; /* Ocupa el 80% de la altura del marco */
    width: 7px; /* Ancho de la barra de luz */
    background-color: #87ecff;
    border-radius: 2px;

    /* Aplicamos la animación de pulso */
    animation: glow-pulse 2.5s ease-in-out infinite;
}

/* --- 4. Posicionar el brillo para cada marco --- */

/* Para el marco izquierdo, el brillo está a la derecha */
.tablet-frame-container.left::before {
    right: 11px; /* Ajusta este valor para una alineación perfecta */
}

/* Para el marco derecho, el brillo está a la izquierda */
.tablet-frame-container.right::before {
    left: 10px; /* Ajusta este valor para una alineación perfecta */
}

/* ========================================================================== */
/* ESTILOS PARA EL BOTÓN DE REANUDAR ROTACIÓN */
/* ========================================================================== */

#play-rotation-button {
    /* SOLUCIÓN AL CENTRADO DEL ICONO: Usamos Flexbox */
    display: flex;
    justify-content: center;
    align-items: center;

    /* Estilo y tamaño del botón */
    width: 50px;
    height: 50px;
    padding: 0;
    border-radius: 50%;
    font-size: 1.5rem;

    /* Lo hacemos empezar invisible y sin ocupar espacio */
    opacity: 0;
    visibility: hidden;
    transform: scale(0.8);
    transition: all 0.3s ease-out;
}

/* LA CLAVE: Muestra el botón cuando el usuario ha interactuado */
/* Este selector busca el botón que es hermano (+) de la escena del cubo */
.cube-scene.user-has-interacted + #play-rotation-button {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
}

/* ========================================================================== */
/* ESTILOS PARA EL AVATAR A.V.A. */
/* ========================================================================== */

/* --- 1. Definición de la animación de flotar --- */
@keyframes ava-float {
    0% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0); }
}

/* --- 2. Contenedor principal del avatar --- */
#ava-container {
    /* LA SOLUCIÓN CLAVE: Lo ancla a la ventana, fuera del flujo del documento */
    position: fixed; 

    bottom: -30px; 
    right: 30px;
    z-index: 999;
    
    width: 320px; /* Tamaño del avatar */
}

/* --- 3. La imagen del avatar --- */
#ava-image {
    width: 100%;
    height: auto;
    display: block;
    
    /* Estado inicial del brillo */
    filter: drop-shadow(0 0 10px #00f6ff);
    
     opacity: 0; 
}

/* --- 4. El botón de play/pausa (ahora superpuesto) --- */
#ava-play-button {
    /* Posicionamos el botón absolutamente DENTRO del #ava-container */
    position: absolute;
    bottom: 60px; /* Distancia desde el borde inferior del contenedor */
    left: 50%;
    transform: translateX(-50%); /* Centrado horizontal perfecto */

    display: flex;
    justify-content: center;
    align-items: center;
    
    width: 45px;
    height: 45px;
    padding: 0;
    margin: 0;
    border-radius: 50%;
    font-size: 1.2rem;
    line-height: 1;

    background-color: rgba(255, 255, 255, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(4px);
    color: #ffffff;
}

/* ========================================================================== */
/* ANIMACIÓN DE TELETRANSPORTE DE A.V.A. (SÓLO PARA LA PÁGINA DE INICIO) */
/* ========================================================================== */

/* --- 1. Definición de las nuevas animaciones --- */

/* Animación para el rayo de luz que baja */
@keyframes teleport-beam {
    0% { transform: translateY(-100vh); } /* Empieza arriba, fuera de la pantalla */
    100% { transform: translateY(0); } /* Termina en su posición final */
}

/* Animación para que el avatar se materialice */
@keyframes materialize-avatar {
    from {
        opacity: 0;
        transform: scale(0.5);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* --- 2. Creación y animación del rayo de luz --- */
/* LA CLAVE: Usamos .home-page para que esto SÓLO ocurra en el index */
body.home-page #ava-container::before {
    content: '';
    position: absolute;
    top: -100vh; /* Se posiciona 100% de la altura de la pantalla por encima */
    left: 50%;
    transform: translateX(-50%);

    /* Apariencia del rayo */
    width: 4px;
    height: 100vh; /* Altura de toda la pantalla */
    background: linear-gradient(to bottom, white, rgba(0, 246, 255, 0.8), transparent);
    
    /* Aplicamos la animación del rayo */
    animation: teleport-beam 0.5s cubic-bezier(0.25, 1, 0.5, 1) 1.8s forwards;
}

/* --- 3. Animación de la aparición del avatar y el botón --- */
body.home-page #ava-image {
    /* La animación del avatar empieza justo cuando el rayo está a punto de llegar */
    animation: 
        materialize-avatar 0.5s ease-out 2.2s forwards,
        ava-float 4s ease-in-out 2.7s infinite; /* El flotado empieza después */
}

body.home-page #ava-play-button {
    /* El botón aparece al final de toda la secuencia */
    animation: fadeInContent 0.5s ease-out 2.7s forwards;
}
